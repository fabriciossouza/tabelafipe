version: '3.3'
services:
  db:
    image: mysql:8.2.0
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'teste'
      MYSQL_PASSWORD: 'teste'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    networks:
     - teste
  postgres:
    shm_size: 1g
    build: ./postgres
    environment:
      POSTGRES_USER: teste
      POSTGRES_PASSWORD: teste
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
     - teste

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - teste
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - teste
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  
  kafka-exporter:
    image: bitnami/kafka-exporter:latest
    ports:
      - "9308:9308"
    networks:
      - teste
    depends_on: 
     - kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    networks:
      - teste
    depends_on:
      - kafka
    ports:
      - 9001:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    
  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - teste
    ports:
      - 9090:9090
  
  grafana:
    image: "grafana/grafana"
    restart: always
    user: "472"
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - teste
    depends_on: 
      - prometheus

networks:
  teste:
    driver: bridge
    name: teste-tecnico

volumes:
  grafana-storage: {}